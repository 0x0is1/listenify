// Generated by view binder compiler. Do not edit!
package com.musicapp.sonicsizzle.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.musicapp.sonicsizzle.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CategoryItemRecycletRowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView coverImageView;

  @NonNull
  public final TextView nameTextView;

  private CategoryItemRecycletRowBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView coverImageView, @NonNull TextView nameTextView) {
    this.rootView = rootView;
    this.coverImageView = coverImageView;
    this.nameTextView = nameTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CategoryItemRecycletRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CategoryItemRecycletRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.category_item_recyclet_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CategoryItemRecycletRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cover_image_view;
      ImageView coverImageView = ViewBindings.findChildViewById(rootView, id);
      if (coverImageView == null) {
        break missingId;
      }

      id = R.id.name_text_view;
      TextView nameTextView = ViewBindings.findChildViewById(rootView, id);
      if (nameTextView == null) {
        break missingId;
      }

      return new CategoryItemRecycletRowBinding((LinearLayout) rootView, coverImageView,
          nameTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
